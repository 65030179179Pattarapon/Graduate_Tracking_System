// --- Global state for recent documents pagination ---
let recentDocsState = {
    currentPage: 1,
    rowsPerPage: 5, // ‡πÅ‡∏™‡∏î‡∏á 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
    fullData: []
};

function determineNextStep(studentData, userApprovedDocs) {
    const nextStepContainer = document.getElementById('next-step-content');
    if (!nextStepContainer) return;

    const hasApproved = (formType) => userApprovedDocs.some(doc => doc.type === formType);
    const state = JSON.parse(localStorage.getItem('userDashboardState') || '{}');

    if (state.rejectedCount > 0) {
        nextStepContainer.className = 'next-step-body alert';
        nextStepContainer.innerHTML = `
            <span class="action-title">‚ö†Ô∏è ‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</span>
            <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</p>
            <a href="/User_Page/html_user/status.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</a>
        `;
        return;
    }

    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 1')) {
        nextStepContainer.innerHTML = `<span class="action-title">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÅ‡∏£‡∏Å‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå ‡∏´‡∏•‡∏±‡∏Å/‡∏£‡πà‡∏ß‡∏°</p><a href="/User_Page/html_user/form1.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 1</a>`;
        return;
    }
    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 2')) {
        nextStepContainer.innerHTML = `<span class="action-title">‡πÄ‡∏™‡∏ô‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏ô‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏ô‡∏¥‡∏û‡∏ô‡∏ò‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</p><a href="/User_Page/html_user/form2.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 2</a>`;
        return;
    }
    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 3')) {
        nextStepContainer.innerHTML = `<span class="action-title">‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á</span><p>‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏ô‡∏≥‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡πâ‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏â‡∏ö‡∏±‡∏ö‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå</p><a href="/User_Page/html_user/form3.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 3</a>`;
        return;
    }
    if (studentData.english_test_status !== '‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå') {
        const statusText = studentData.english_test_status ? `(‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${studentData.english_test_status})` : '';
        nextStepContainer.innerHTML = `<span class="action-title">‡∏¢‡∏∑‡πà‡∏ô‡∏ú‡∏•‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</span><p>‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡πà‡∏ô‡∏ú‡∏•‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏•‡∏™‡∏≠‡∏ö‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå ${statusText}</p><a href="/User_Page/html_user/eng.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏¢‡∏∑‡πà‡∏ô‡∏ú‡∏•‡∏™‡∏≠‡∏ö</a>`;
        return;
    }
    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 4')) {
        nextStepContainer.innerHTML = `<span class="action-title">‡πÄ‡∏ä‡∏¥‡∏ç‡∏ú‡∏π‡πâ‡∏ó‡∏£‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏∏‡∏í‡∏¥</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡∏ú‡∏π‡πâ‡∏ó‡∏£‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏∏‡∏í‡∏¥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏¥‡∏à‡∏±‡∏¢</p><a href="/User_Page/html_user/form4.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 4</a>`;
        return;
    }
    if (!hasApproved('‡∏ü‡∏≠‡∏£‡πå‡∏° 5')) {
        nextStepContainer.innerHTML = `<span class="action-title">‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span><p>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡∏à‡∏±‡∏¢</p><a href="/User_Page/html_user/form5.html" class="action-button">‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ü‡∏≠‡∏£‡πå‡∏° 5</a>`;
        return;
    }

    nextStepContainer.className = 'next-step-body done';
    nextStepContainer.innerHTML = `
        <span class="action-title">üëç ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°!</span>
        <p>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÜ ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏ï‡πà‡∏≠‡πÑ‡∏õ</p>
        <a href="/User_Page/html_user/status.html" class="action-button">‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</a>
    `;
}

// --- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤ ---
function renderRecentDocsPage(page) {
    recentDocsState.currentPage = page;
    const listElement = document.getElementById('recent-docs-list');
    const paginationControls = document.getElementById('recent-docs-pagination');
    
    if (!listElement || !paginationControls) return;

    listElement.innerHTML = '';
    
    const totalPages = Math.ceil(recentDocsState.fullData.length / recentDocsState.rowsPerPage) || 1;

    if (recentDocsState.fullData.length === 0) {
        listElement.innerHTML = '<li class="no-docs">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</li>';
        paginationControls.innerHTML = ''; // ‡∏ã‡πà‡∏≠‡∏ô pagination ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        return;
    }

    const start = (page - 1) * recentDocsState.rowsPerPage;
    const end = start + recentDocsState.rowsPerPage;
    const paginatedItems = recentDocsState.fullData.slice(start, end);

    paginatedItems.forEach(doc => {
        const li = document.createElement('li');
        const docId = doc.id || doc.doc_id || `${doc.type}_${doc.student_email || localStorage.getItem("current_user")}`;
        const detailLink = `/User_Page/html_user/student_document_detail.html?id=${encodeURIComponent(docId)}&type=${encodeURIComponent(doc.type)}`;
        const statusClass = `status-${(doc.status || 'default').replace(/\s+/g, '-')}`;
        li.innerHTML = `<a href="${detailLink}" class="doc-title">${doc.title} (${doc.type || ''})</a><span class="doc-status ${statusClass}">${doc.status}</span>`;
        listElement.appendChild(li);
    });

    // --- Render Pagination Controls ---
    paginationControls.innerHTML = `
        <span class="page-info">‡∏´‡∏ô‡πâ‡∏≤ ${recentDocsState.currentPage} / ${totalPages}</span>
        <button id="recent-docs-prev" ${recentDocsState.currentPage === 1 ? 'disabled' : ''}>·ê∏</button>
        <button id="recent-docs-next" ${recentDocsState.currentPage >= totalPages ? 'disabled' : ''}>·ê≥</button>
    `;

    document.getElementById('recent-docs-prev').addEventListener('click', () => {
        if (recentDocsState.currentPage > 1) {
            renderRecentDocsPage(recentDocsState.currentPage - 1);
        }
    });
    document.getElementById('recent-docs-next').addEventListener('click', () => {
        if (recentDocsState.currentPage < totalPages) {
            renderRecentDocsPage(recentDocsState.currentPage + 1);
        }
    });
}

// --- Main function to load all data and render the dashboard (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á) ---
async function loadDashboard() {
    const userEmail = localStorage.getItem("current_user");
    if (!userEmail) { window.location.href = "/login/index.html"; return; }

    try {
        const [students, pendingDocs, approvedDocs, rejectedDocs] = await Promise.all([
            fetch("/data/student.json").then(res => res.json()),
            fetch("/data/document_pending.json").then(res => res.json()),
            fetch("/data/document_approved.json").then(res => res.json()),
            fetch("/data/document_rejected.json").then(res => res.json())
        ]);
        
        const currentUser = students.find(s => s.email === userEmail);
        if (!currentUser) { alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤, ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"); logout(); return; }
        
        const userFullname = `${currentUser.prefix_th}${currentUser.first_name_th} ${currentUser.last_name_th}`;
        const studentId = currentUser.student_id;
        
        document.getElementById('nav-username').textContent = currentUser.email;
        document.getElementById('welcome-name').textContent = `${currentUser.first_name_th} ${currentUser.last_name_th}`;
        
        const localStoragePending = JSON.parse(localStorage.getItem('localStorage_pendingDocs') || '[]');
        const localStorageApproved = JSON.parse(localStorage.getItem('localStorage_approvedDocs') || '[]');
        const localStorageRejected = JSON.parse(localStorage.getItem('localStorage_rejectedDocs') || '[]');
        
        const userPendingDocs = getUserDocuments([pendingDocs, localStoragePending], studentId, userFullname);
        const userApprovedDocs = getUserDocuments([approvedDocs, localStorageApproved], studentId, userFullname);
        const userRejectedDocs = getUserDocuments([rejectedDocs, localStorageRejected], studentId, userFullname);
        const userAllDocuments = [...userPendingDocs, ...userApprovedDocs, ...userRejectedDocs];
        
        localStorage.setItem('userDashboardState', JSON.stringify({ rejectedCount: userRejectedDocs.length }));

        document.getElementById("submitted-count").textContent = userAllDocuments.length;
        document.getElementById("approved-count").textContent = userApprovedDocs.length;
        document.getElementById("rejected-count").textContent = userRejectedDocs.length;
        
        // --- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Pagination ---
        userAllDocuments.sort((a, b) => new Date(b.submitted_date || b.rejected_date || 0) - new Date(a.submitted_date || a.rejected_date || 0));
        recentDocsState.fullData = userAllDocuments; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß
        renderRecentDocsPage(1); // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å

        // --- 3. Determine and Render Next Step ---
        determineNextStep(currentUser, userApprovedDocs);

    } catch (error) {
        console.error("Failed to load dashboard data:", error);
        document.querySelector('main.dashboard-container').innerHTML = `<p style="color: red; text-align: center;">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î</p>`;
    }
}

// --- Main Event Listener (‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°) ---
document.addEventListener('DOMContentLoaded', function() {
    
    // Dashboard Logic
    if (document.querySelector('main.dashboard-container')) {
        loadDashboard();
    }
});