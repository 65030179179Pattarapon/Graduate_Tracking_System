// public/Admin_Page/js_admin/manage_structure.js (‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡πÑ‡∏î‡πâ)

let currentModalData = { type: null, mode: 'create', id: null };
const token = localStorage.getItem('token');
let departmentsCache = [];

document.addEventListener('DOMContentLoaded', () => {
    if (!token || localStorage.getItem('role') !== 'admin') {
        window.location.href = '/login/index.html';
        return;
    }
    loadAllData();
});

async function loadAllData() {
    await loadDepartments();
    await loadPrograms(); 
}

function showTab(tabName) {
    document.querySelectorAll('.structure-section').forEach(el => el.style.display = 'none');
    document.getElementById(tabName).style.display = 'block';

    document.querySelectorAll('.structure-tabs button').forEach(button => {
        button.classList.remove('active');
    });
    document.querySelector(`.structure-tabs button[onclick="showTab('${tabName}')"]`).classList.add('active');
}

function openModal(type, mode = 'create', data = null) {
    currentModalData = { type, mode, id: data ? data.department_id : null };
    const modal = document.getElementById('modal');
    const title = document.getElementById('modal-title');
    
    if (type === 'department') {
        title.textContent = mode === 'create' ? '‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤' : '‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤';
        document.getElementById('input-name').value = data ? data.name : '';
        document.getElementById('input-id').style.display = 'none';
        document.getElementById('input-name').style.display = 'block';
        document.getElementById('select-degree').style.display = 'none';
        document.getElementById('select-department').style.display = 'none';
    }
    modal.style.display = 'flex';
}

function closeModal() {
    document.getElementById('modal').style.display = 'none';
}

async function loadDepartments() {
    try {
        const response = await fetch('/api/structures/departments', { headers: { 'Authorization': `Bearer ${token}` } });
        const result = await response.json();
        if (result.success) {
            departmentsCache = result.data;
            renderTable('departments-table', result.data);
        }
    } catch (error) { console.error('Error loading departments:', error); }
}

function renderTable(tableId, data) {
    const tbody = document.querySelector(`#${tableId} tbody`);
    tbody.innerHTML = '';
    if (data.length === 0) {
        tbody.innerHTML = `<tr><td colspan="3" style="text-align:center;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>`;
        return;
    }
    data.forEach(item => {
        const row = document.createElement('tr');
        // ‚ùóÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
        row.innerHTML = `
            <td>${item.department_id}</td>
            <td>${item.name}</td>
            <td>
                <button onclick='openModal("department", "edit", ${JSON.stringify(item)})'>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                <button onclick='deleteDepartment(${item.department_id})' class='delete-btn'>üóëÔ∏è ‡∏•‡∏ö</button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

async function saveData() {
    const { type, mode, id } = currentModalData;
    const name = document.getElementById('input-name').value;
    if (!name) { alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠'); return; }

    let url, method, body;

    if (type === 'department') {
        if (mode === 'create') {
            url = '/api/structures/departments';
            method = 'POST';
        } else { // edit mode
            url = `/api/structures/departments/${id}`;
            method = 'PUT';
        }
        body = { name };
    }
    
    try {
        const response = await fetch(url, {
            method: method,
            headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },
            body: JSON.stringify(body)
        });
        const result = await response.json();
        if (result.success) {
            alert(result.message);
            closeModal();
            loadAllData();
        } else {
            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${result.message}`);
        }
    } catch (error) { console.error('Error saving data:', error); }
}

// --- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ---
async function deleteDepartment(id) {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')) {
        return;
    }

    try {
        const response = await fetch(`/api/structures/departments/${id}`, {
            method: 'DELETE',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        const result = await response.json();
        if (result.success) {
            alert(result.message);
            loadAllData(); // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        } else {
            alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${result.message}`);
        }
    } catch (error) {
        console.error('Error deleting department:', error);
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå manage_structure.js
async function loadPrograms() {
    try {
        const response = await fetch('/api/structures/programs', { 
            headers: { 'Authorization': `Bearer ${token}` } 
        });
        const result = await response.json();
        if (result.success) {
            // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤
            const mastersPrograms = result.data.filter(p => p.degree_level === '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó');
            const doctoralPrograms = result.data.filter(p => p.degree_level === '‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å');

            // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            renderProgramsTable('masters-programs-table', mastersPrograms);
            renderProgramsTable('doctoral-programs-table', doctoralPrograms);
        }
    } catch (error) { 
        console.error('Error loading programs:', error); 
    }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå manage_structure.js
function renderProgramsTable(tableId, data) {
    const tbody = document.querySelector(`#${tableId} tbody`);
    tbody.innerHTML = '';

    if (data.length === 0) {
        tbody.innerHTML = `<tr><td colspan="4" style="text-align:center;">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£</td></tr>`;
        return;
    }

    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ console.log ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ

    data.forEach(program => {
        // üîΩ ‡∏¢‡πâ‡∏≤‡∏¢ console.log ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ üîΩ
        console.log(`Program ID: ${program.program_id}, Dept ID: ${program.department_id}, Type: ${typeof program.department_id}`);

        // ‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤‡∏à‡∏≤‡∏Å cache
        const department = departmentsCache.find(d => 
            parseInt(d.department_id) === parseInt(program.department_id)
        );
        const departmentName = department ? department.name : 'N/A';

        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${program.program_id}</td>
            <td>${program.name}</td>
            <td>${departmentName}</td>
            <td>
                <button>‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                <button class='delete-btn'>üóëÔ∏è ‡∏•‡∏ö</button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

// Make functions globally accessible
window.showTab = showTab;
window.openModal = openModal;
window.closeModal = closeModal;
window.saveData = saveData;
window.deleteDepartment = deleteDepartment; // ‚ùóÔ∏è ‡∏ó‡∏≥‡πÉ‡∏´‡πâ HTML ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ